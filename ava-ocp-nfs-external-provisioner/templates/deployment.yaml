apiVersion: apps/v1
kind: Deployment
metadata:
  name: nfs-client-provisioner
  labels:
    app: {{ .Values.labels }}
  # replace with namespace where provisioner is deployed
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ .Values.labels }}
  template:
    metadata:
      labels:
        app: {{ .Values.labels }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      securityContext:
      {{- toYaml .Values.securityContext | nindent 8 }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}      
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          volumeMounts:
            - name: {{ .Values.nfs.volumeName }}
              mountPath: /persistentvolumes
          env:
            - name: PROVISIONER_NAME
              value: {{ .Values.storageClass.provisionerName }}
            - name: NFS_SERVER
              value: {{ .Values.nfs.server }}
            - name: NFS_PATH
              value: {{ .Values.nfs.path }}
      volumes:
        - name: {{ .Values.nfs.volumeName }}
          nfs:
            server: {{ .Values.nfs.server }}
            path: {{ .Values.nfs.path }}
